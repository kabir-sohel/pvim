"CtrlP options

""Set no max file limit
let g:ctrlp_max_files = 0
" Search from current directory instead of project root
let g:ctrlp_working_path_mode = 'ra'

"Caching options
let g:ctrlp_use_caching = 1
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_cache_dir = '~/.cache/ctrlp_cache'

"Vim's Ignored dirs
set wildignore+=*/bin/**
set wildignore+=*/config/**
set wildignore+=*/lang/**
set wildignore+=*/t/**
set wildignore+=*/vendor/**
set wildignore+=*/ultranet_hierarchy_builder.cache/**
set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux

"Ctrlp's ignored files and dirs
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn)$',
  \ 'file': '\v\.(exe|so|dll)$',
  \ 'link': 'some_bad_symbolic_links',
  \ }

                                 
let g:ctrlp_root_markers = [ 
    \ '/usr/local/git_tree/main/apps/admin/hoteladmin/', 
    \ '/usr/local/git_tree/main/lib/Bookings/Db', 
    \ '/usr/local/git_tree/main/lib/Bookings/Extranet', 
    \ '/usr/local/git_tree/main/lib/Bookings/Experiment', 
    \ '/usr/local/git_tree/main/lib/Bookings/Tools' 
    \ ]



" Search in certain directories a large project (hardcoded for now)
" Dont understand the following lines, commenting out
" cnoremap %proj <c-r>=expand('~/admin')<cr>
" ga = go api
"" map <Leader>ga :CtrlP %proj/api/<cr>
" gf = go frontend
""map <Leader>gf :CtrlP %proj/some/long/path/to/frontend/code/<cr>


""ctrlP: make it so that Ctrl+P opens the LRU buffer window first - this
" avoids having to wait for 10 seconds for it to scan the whole source tree
" when most of the time I just want to open the files I've been working on the
" last couple days.
"

"let g:ctrlp_cmd = 'CtrlPMRU'

let g:ctrlp_cmd = 'CtrlPMRU /usr/local/git_tree/main'

""let g:ctrlp_cmd = 'CtrlP /usr/local/git_tree/main'

noremap <C-k> :CtrlP /home/ksohel/ctrlp_lite/<CR>
noremap <C-l> :CtrlP /home/ksohel/ctrlp_lib/<CR>
noremap <C-m> :CtrlP /usr/local/git_tree/main/<CR>

let g:ctrlp_follow_symlinks = 1


""autocmd VimEnter * CtrlP
""Ctrlf and Ctrlb to switch between modes

""let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard']


""Commented#if executable('ag')
""Commented#    set grepprg=ag\ --nogroup\ --nocolor
""Commented#""" Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
""Commented#    let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
""Commented#""ag is fast enough that CtrlP doesn't need to cache
""Commented#    let g:ctrlp_use_caching = 0
""Commented#""""bind K to grep word under cursor
""Commented#    nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>"
""Commented#""""bind \ (backward slash) to grep shortcut
""Commented#""command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!"
""Commented#    command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!
""Commented#endif

""if executable('ag')
""    set grepprg=ag\ --nogroup\ --nocolor
""""" Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
""    let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
""""ag is fast enough that CtrlP doesn't need to cache
""    let g:ctrlp_use_caching = 0
""""""bind K to grep word under cursor
""    ""nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>"
""    ""command -nargs=+ -complete=file -bar Ag silent! grep! <args>|cwindow|redraw!
""endif



